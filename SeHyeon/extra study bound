#include <iostream>
#include <algorithm> //lower_bound, upper_bound 내장
#include <vector>
using namespace std;

int main() {
	//Binary Search 기반의 탐색 방법.(항상 정렬되어 있어야 함)
	int arr[] = { 1 ,2 ,3, 4, 6, 7, 8, 9 };	//정렬 되어있어야 함
	cout << "lower_bound(4) : " << lower_bound(arr, arr + 8, 4) - arr + 1 << endl;	//시작 주소, 끝나는 주소, 키 값
	cout << "lower_bound(5) : " << lower_bound(arr, arr + 8, 5) - arr + 1 << endl;	//5보다 큰 값이 시작하는 위치 출력
	
	vector<int> v = { 1 ,2 ,3, 4, 6, 7, 8, 9 };
	cout << "upper_bound(6) : " << upper_bound(v.begin(), v.end(), 6) - v.begin() << endl; // 6보다 작거나 같은 값들이 있는 마지막 위치
	cout << "upper_bound(5) : " << upper_bound(v.begin(), v.end(), 5) - v.begin() << endl; 

}
